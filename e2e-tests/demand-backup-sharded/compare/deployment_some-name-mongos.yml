apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  generation: 1
  name: some-name-mongos
  ownerReferences:
    - controller: true
      kind: PerconaServerMongoDB
      name: some-name
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: mongos
      app.kubernetes.io/instance: some-name
      app.kubernetes.io/managed-by: percona-server-mongodb-operator
      app.kubernetes.io/name: percona-server-mongodb
      app.kubernetes.io/part-of: percona-server-mongodb
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: mongos
        app.kubernetes.io/instance: some-name
        app.kubernetes.io/managed-by: percona-server-mongodb-operator
        app.kubernetes.io/name: percona-server-mongodb
        app.kubernetes.io/part-of: percona-server-mongodb
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: mongos
                  app.kubernetes.io/instance: some-name
                  app.kubernetes.io/managed-by: percona-server-mongodb-operator
                  app.kubernetes.io/name: percona-server-mongodb
                  app.kubernetes.io/part-of: percona-server-mongodb
              topologyKey: kubernetes.io/hostname
      containers:
        - args:
            - mongos
            - --bind_ip_all
            - --port=27017
            - --sslAllowInvalidCertificates
            - --configdb
            - cfg/some-name-cfg-0.some-name-cfg.NAME_SPACE.svc.cluster.local:27017,some-name-cfg-1.some-name-cfg.NAME_SPACE.svc.cluster.local:27017,some-name-cfg-2.some-name-cfg.NAME_SPACE.svc.cluster.local:27017
            - --sslMode=preferSSL
            - --clusterAuthMode=x509
          command:
            - /data/db/ps-entry.sh
          env:
            - name: MONGODB_PORT
              value: "27017"
          envFrom:
            - secretRef:
                name: some-users
                optional: false
            - secretRef:
                name: internal-some-name-users
                optional: false
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /data/db/mongodb-healthcheck
                - k8s
                - liveness
                - --component
                - mongos
            failureThreshold: 4
            initialDelaySeconds: 60
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: mongos
          ports:
            - containerPort: 27017
              name: mongos
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /data/db/mongodb-healthcheck
                - k8s
                - readiness
                - --component
                - mongos
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /data/db
              name: mongod-data
            - mountPath: /etc/mongodb-secrets
              name: some-name-mongodb-keyfile
              readOnly: true
            - mountPath: /etc/mongodb-ssl
              name: ssl
              readOnly: true
            - mountPath: /etc/mongodb-ssl-internal
              name: ssl-internal
              readOnly: true
          workingDir: /data/db
      dnsPolicy: ClusterFirst
      initContainers:
        - command:
            - /init-entrypoint.sh
          imagePullPolicy: Always
          name: mongo-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /data/db
              name: mongod-data
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: some-name-mongodb-keyfile
          secret:
            defaultMode: 288
            optional: false
            secretName: some-name-mongodb-keyfile
        - name: ssl
          secret:
            defaultMode: 288
            optional: false
            secretName: some-name-ssl
        - name: ssl-internal
          secret:
            defaultMode: 288
            optional: true
            secretName: some-name-ssl-internal
        - emptyDir: {}
          name: mongod-data
